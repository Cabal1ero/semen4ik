// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –ü–ö: –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–±–æ—Ä–∫–∏

// --- SVG-–∏–∫–æ–Ω–∫–∏ –¥–ª—è sidebar ---
const CATEGORY_ICONS = {
  '–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞': `<svg class="w-6 h-6 mr-2 text-[#7a85ff] dark:text-[#7a85ff]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="3" y="7" width="18" height="10" rx="2"/><circle cx="7.5" cy="12" r="1.5"/><circle cx="16.5" cy="12" r="1.5"/></svg>`,
  '–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä': `<svg class="w-6 h-6 mr-2 text-[#7a85ff] dark:text-[#7a85ff]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="4" y="4" width="16" height="16" rx="2"/><path d="M9 9h6v6H9z"/></svg>`,
  '–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞': `<svg class="w-6 h-6 mr-2 text-[#7a85ff] dark:text-[#7a85ff]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="3" y="3" width="18" height="18" rx="2"/><path d="M7 7h10v10H7z"/></svg>`,
  '–ù–∞–∫–æ–ø–∏—Ç–µ–ª—å': `<svg class="w-6 h-6 mr-2 text-[#7a85ff] dark:text-[#7a85ff]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="4" y="7" width="16" height="10" rx="2"/><path d="M8 11h8v2H8z"/></svg>`,
  '–ö–æ—Ä–ø—É—Å': `<svg class="w-6 h-6 mr-2 text-[#7a85ff] dark:text-[#7a85ff]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="6" y="3" width="12" height="18" rx="2"/><path d="M9 7h6"/></svg>`,
  '–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å': `<svg class="w-6 h-6 mr-2 text-[#7a85ff] dark:text-[#7a85ff]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="3" y="7" width="18" height="10" rx="2"/><path d="M7 10h2v4H7zM15 10h2v4h-2z"/></svg>`,
  '–°–∏—Å—Ç–µ–º–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è': `<svg class="w-6 h-6 mr-2 text-[#7a85ff] dark:text-[#7a85ff]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="4"/><path d="M12 2v2m0 16v2m10-10h-2M4 12H2m15.07-7.07l-1.41 1.41M6.34 17.66l-1.41 1.41m12.02 0l-1.41-1.41M6.34 6.34L4.93 4.93"/></svg>`,
  '–ë–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è': `<svg class="w-6 h-6 mr-2 text-[#7a85ff] dark:text-[#7a85ff]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="3" y="7" width="18" height="10" rx="2"/><path d="M7 12h2v2H7zM15 12h2v2h-2z"/></svg>`,
};

function showToast(message, type = 'success') {
  const toast = document.createElement('div');
  toast.className = `mb-4 p-4 rounded-lg shadow-lg transition-all duration-300 ${type === 'success' ? 'bg-green-500' : 'bg-red-500'} text-white`;
  toast.textContent = message;
  const container = document.getElementById('toast-container');
  container.appendChild(toast);
  setTimeout(() => toast.classList.add('opacity-0'), 2500);
  setTimeout(() => toast.remove(), 3000);
}

function getCookie(name) {
  let cookieValue = null;
  if (document.cookie && document.cookie !== '') {
    const cookies = document.cookie.split(';');
    for (let i = 0; i < cookies.length; i++) {
      const cookie = cookies[i].trim();
      if (cookie.substring(0, name.length + 1) === (name + '=')) {
        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
        break;
      }
    }
  }
  return cookieValue;
}

let selectedCategoryId = null;
let lastSavedBuildId = null;
let allCategories = [];
let allProducts = [];
let currentFilters = {};

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –∏–∫–æ–Ω–∫–∞–º–∏
async function loadCategories() {
  const res = await fetch('/pcbuilder/api/categories/');
  const data = await res.json();
  allCategories = data.categories;
  const list = document.getElementById('category-list');
  list.innerHTML = '';
  data.categories.forEach(cat => {
    const li = document.createElement('li');
    li.innerHTML = `<button class="w-full flex items-center px-4 py-3 rounded-xl transition-colors font-medium text-lg ${selectedCategoryId === cat.id ? 'bg-[#7a85ff] text-white' : 'text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-[#23283a]'}" data-id="${cat.id}">
      ${(CATEGORY_ICONS[cat.name] || '<span class=\'w-6 h-6 mr-2\'>üñ•Ô∏è</span>')}
      <span>${cat.name}</span>
    </button>`;
    li.querySelector('button').onclick = () => {
      selectedCategoryId = cat.id;
      loadCategories();
      loadProducts(cat.id);
    };
    list.appendChild(li);
  });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async function loadProducts(categoryId) {
  const res = await fetch(`/pcbuilder/api/products/?category=${categoryId}`);
  const data = await res.json();
  allProducts = data.products;
  renderFilters(data.products);
  renderProducts(data.products);
}

// –†–µ–Ω–¥–µ—Ä —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è–º
function renderFilters(products) {
  // –ü—Ä–∏–º–µ—Ä: –∏—â–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const filter1 = document.getElementById('filter-1');
  const filter2 = document.getElementById('filter-2');
  filter1.innerHTML = '<option value="">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å</option>';
  filter2.innerHTML = '<option value="">–û–±—ä–µ–º –ø–∞–º—è—Ç–∏</option>';
  const brands = new Set();
  const memory = new Set();
  products.forEach(prod => {
    prod.specs.forEach(s => {
      if (s.specification__name.toLowerCase().includes('–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å')) brands.add(s.value);
      if (s.specification__name.toLowerCase().includes('–æ–±—ä–µ–º')) memory.add(s.value);
    });
  });
  brands.forEach(b => filter1.innerHTML += `<option value="${b}">${b}</option>`);
  memory.forEach(m => filter2.innerHTML += `<option value="${m}">${m}</option>`);
  filter1.onchange = () => applyFilters();
  filter2.onchange = () => applyFilters();
}

function applyFilters() {
  const brand = document.getElementById('filter-1').value;
  const memory = document.getElementById('filter-2').value;
  let filtered = allProducts;
  if (brand) filtered = filtered.filter(prod => prod.specs.some(s => s.value === brand));
  if (memory) filtered = filtered.filter(prod => prod.specs.some(s => s.value === memory));
  renderProducts(filtered);
}

// –†–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤
function renderProducts(products) {
  const list = document.getElementById('products-list');
  list.innerHTML = '';
  if (!products.length) {
    list.innerHTML = '<div class="text-gray-500 dark:text-gray-400 text-center col-span-2">–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</div>';
    return;
  }
  products.forEach(prod => {
    const card = document.createElement('div');
    card.className = 'flex flex-col h-[400px] bg-gray-100 dark:bg-[#181C27] rounded-2xl p-6 shadow relative';
    card.innerHTML = `
      <div class="w-full h-[160px] bg-gray-200 dark:bg-[#23283a] flex items-center justify-center rounded-xl text-3xl text-[#b0b0b0] dark:text-[#7a8599] font-bold mb-4">300 √ó 200</div>
      <div class="flex-1 flex flex-col gap-1 overflow-hidden">
        <div class="text-lg font-bold text-gray-900 dark:text-white truncate" title="${prod.name}">${prod.name}</div>
        <div class="text-[#7a85ff] text-base font-semibold mb-1">${prod.price} ‚ÇΩ</div>
        <div class="flex flex-wrap gap-2 text-xs text-gray-600 dark:text-gray-300 mb-1 max-h-[60px] overflow-y-auto">
          ${(prod.specs || []).map(s => `<span class="truncate"><span class="font-medium">${s.specification__name}:</span> ${s.value}${s.specification__unit ? ' ' + s.specification__unit : ''}</span>`).join('')}
        </div>
      </div>
      <button class="absolute bottom-6 left-6 right-6 px-6 py-2 rounded-xl text-base font-bold transition-colors ${prod.is_selected ? 'bg-[#7a85ff] text-white cursor-not-allowed' : 'bg-[#7a85ff] hover:bg-[#4b1bb3] text-white'} select-product-btn" data-id="${prod.id}" ${prod.is_selected ? 'disabled' : ''}>${prod.is_selected ? '–í—ã–±—Ä–∞–Ω–æ' : '–í—ã–±—Ä–∞—Ç—å'}</button>
    `;
    card.querySelector('.select-product-btn').onclick = () => addToBuild(prod.id);
    list.appendChild(card);
  });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–±–æ—Ä–∫–∏
async function loadBuild() {
  const res = await fetch('/pcbuilder/api/build/');
  const data = await res.json();
  const list = document.getElementById('build-list');
  const total = document.getElementById('build-total');
  list.innerHTML = '';
  if (!data.components.length) {
    list.innerHTML = '<div class="text-gray-500 dark:text-gray-400 text-center">–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã</div>';
    total.textContent = '0 ‚ÇΩ';
    return;
  }
  data.components.forEach(comp => {
    const div = document.createElement('div');
    div.className = 'flex justify-between items-center border border-[#7a85ff] rounded-xl px-4 py-3';
    div.innerHTML = `
      <div>
        <div class="text-gray-400 text-sm font-semibold mb-1">${comp.category_name}</div>
        <div class="text-base font-bold text-white">${comp.product_name}</div>
      </div>
      <div class="flex flex-col items-end">
        <span class="font-bold text-[#7a85ff] text-lg">${comp.price} ‚ÇΩ</span>
        <button class="remove-btn text-red-500 hover:text-red-700 text-xl" title="–£–¥–∞–ª–∏—Ç—å" data-id="${comp.product_id}">&times;</button>
      </div>
    `;
    div.querySelector('.remove-btn').onclick = () => removeFromBuild(comp.product_id);
    list.appendChild(div);
  });
  total.textContent = data.total + ' ‚ÇΩ';
}

// –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ —Å–±–æ—Ä–∫—É
async function addToBuild(productId) {
  const res = await fetch('/pcbuilder/api/build/add/', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRFToken': getCookie('csrftoken')
    },
    body: JSON.stringify({ product_id: productId })
  });
  const data = await res.json();
  if (data.success) {
    showToast('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω');
    loadBuild();
    loadProducts(selectedCategoryId);
  } else {
    showToast(data.error || '–û—à–∏–±–∫–∞', 'error');
  }
}

// –£–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∑ —Å–±–æ—Ä–∫–∏
async function removeFromBuild(productId) {
  const res = await fetch('/pcbuilder/api/build/remove/', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRFToken': getCookie('csrftoken')
    },
    body: JSON.stringify({ product_id: productId })
  });
  const data = await res.json();
  if (data.success) {
    showToast('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–¥–∞–ª—ë–Ω');
    loadBuild();
    loadProducts(selectedCategoryId);
  } else {
    showToast(data.error || '–û—à–∏–±–∫–∞', 'error');
  }
}

// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–±–æ—Ä–∫—É
async function saveBuild() {
  const res = await fetch('/pcbuilder/api/build/save/', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRFToken': getCookie('csrftoken')
    },
    body: JSON.stringify({ name: '–ú–æ—è —Å–±–æ—Ä–∫–∞' })
  });
  const data = await res.json();
  if (data.success) {
    showToast('–°–±–æ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!');
    lastSavedBuildId = data.build_id;
  } else {
    showToast(data.error || '–û—à–∏–±–∫–∞', 'error');
  }
}

// –î–æ–±–∞–≤–∏—Ç—å —Å–±–æ—Ä–∫—É –≤ –∫–æ—Ä–∑–∏–Ω—É
async function addBuildToCart() {
  if (!lastSavedBuildId) {
    showToast('–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å–±–æ—Ä–∫—É', 'error');
    return;
  }
  const res = await fetch('/pcbuilder/api/build/add_to_cart/', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRFToken': getCookie('csrftoken')
    },
    body: JSON.stringify({ build_id: lastSavedBuildId })
  });
  const data = await res.json();
  if (data.success) {
    showToast('–°–±–æ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É!');
  } else {
    showToast(data.error || '–û—à–∏–±–∫–∞', 'error');
  }
}

// –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ URL
function getUrlParam(name) {
  const url = new URL(window.location.href);
  return url.searchParams.get(name);
}

// –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –≤ —Å–±–æ—Ä–∫—É
async function loadSavedConfigAndApply(configId) {
  console.log('–ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', configId);
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å–±–æ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const res = await fetch('/pcbuilder/api/builds/');
  const data = await res.json();
  console.log('–û—Ç–≤–µ—Ç /pcbuilder/api/builds/:', data);
  if (!data.success) return;

  const config = (data.configurations || []).find(c => c.id == configId || c.id == +configId);
  console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:', config);
  if (!config) {
    showToast('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', 'error');
    return;
  }

  // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–±–æ—Ä–∫—É
  const buildRes = await fetch('/pcbuilder/api/build/');
  const buildData = await buildRes.json();
  for (const comp of buildData.components) {
    console.log('–£–¥–∞–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç:', comp.product_id);
    await fetch('/pcbuilder/api/build/remove/', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRFToken': getCookie('csrftoken')
      },
      body: JSON.stringify({ product_id: comp.product_id })
    });
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  for (const comp of config.components) {
    console.log('–î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç:', comp.product_id);
    await fetch('/pcbuilder/api/build/add/', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRFToken': getCookie('csrftoken')
      },
      body: JSON.stringify({ product_id: comp.product_id })
    });
  }

  showToast('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
  loadBuild();

  // –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä load_config –∏–∑ URL
  const url = new URL(window.location.href);
  url.searchParams.delete('load_config');
  window.history.replaceState({}, document.title, url.pathname + url.search);
  console.log('–ü–∞—Ä–∞–º–µ—Ç—Ä load_config —É–¥–∞–ª—ë–Ω –∏–∑ URL');
}

// –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚Äî –µ—Å–ª–∏ –µ—Å—Ç—å load_config, –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
const origDomContentLoaded = window.onload;
window.addEventListener('DOMContentLoaded', async () => {
  loadCategories();
  loadBuild();
  document.getElementById('save-build-btn').onclick = saveBuild;
  document.getElementById('add-to-cart-btn').onclick = addBuildToCart;

  const configId = getUrlParam('load_config');
  if (configId) {
    await loadSavedConfigAndApply(configId);
  }
  if (typeof origDomContentLoaded === 'function') origDomContentLoaded();
}); 